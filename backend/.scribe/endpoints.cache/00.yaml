## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/create-toolbox-talk
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a toolbox talk.'
      description: "This endpoint creates a toolbox. In this API when we create a toolbox talk then we need to choose one option from dropdown 'Send', 'Save in library' OR 'Send & Save'. If we choose 'Send' OR 'Send & Save' then we always need to select any role or departments or attendees or permissions and also 'Video URL Link' OR 'Upload PDF file'. And if we choose Save in Library then we don't need to select any users from ( roles, departments, permissions, attendees) and not need to put any 'Video URL Link' OR 'Upload PDF file'. The param name of dropdown list for 'Send' OR 'Save in library' OR 'Send & Save' is 'isLibrary' param."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'required. The title of the toolbox talk.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      select_user_detail:
        name: select_user_detail
        description: "array with some keys (objects). The users selected from dropdown list from attendees or roles or departments or permissions or select users. It is required while choose 'Send' OR 'Send & Save'. But when we choose 'Save in library' then this param is optional."
        required: false
        example: '- [{"select_user_id":"4392", "user_name":"testing_name1", "user_email":"tpurposely@gmail.com"}, {"select_user_id":"4392", "user_name":"testing_name2", "user_email":"tpurposely1@yopmail.com"}]'
        type: json
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      due_date:
        name: due_date
        description: 'The Due date of toolbox talk. Ex:- "2025-08-22"'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      resource_url:
        name: resource_url
        description: "when 'pdf_file' is not present and choose only 'Send' OR 'Send & Save' The 'Video URL Link' for a toolbox talk. Ex:- \"['youtube.com','testtubevideo.com' ]\""
        required: true
        example:
          - 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pdf_file:
        name: pdf_file
        description: "when 'resource_url' is not present and choose only 'Send' OR 'Send & Save' The 'Upload PDF File' for a toolbox talk. Ex:- \"['firstPDF.pdf','secondPDF.pdf' ]\""
        required: true
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'optional The description of the toolbox talk.'
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      questions:
        name: questions
        description: 'array with some keys (objects) optional. The Question Sheets for the toolbox talk.'
        required: false
        example: '- [{"text":"this is first question", "options" : [ "test1", "test2", "test3", "test4"],"correctAnswer":"1"},{"text":"this is second question", "options" : [ "test1", "test2", "test3", "test4"], "correctAnswer":"2" }]'
        type: json
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      attemptQuestions:
        name: attemptQuestions
        description: "when we choose 'questions' the Question Sheets for the toolbox talk. In this Number of Questions to Ask per Participant(attemptQuestions) is always greater then Number of Correct Answers Required to Pass(number_of_correct_answer_to_pass)."
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      number_of_correct_answer_to_pass:
        name: number_of_correct_answer_to_pass
        description: "when we choose 'questions' the Question Sheets for the toolbox talk. In this Number of Correct Answers Required to Pass(number_of_correct_answer_to_pass) is always less then Number of Questions to Ask per Participant(attemptQuestions)."
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      isLibrary:
        name: isLibrary
        description: 'when we select options from dropdown list then we send the values in this params 1, 2 or 3.'
        required: true
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: consequatur
      select_user_detail: '- [{"select_user_id":"4392", "user_name":"testing_name1", "user_email":"tpurposely@gmail.com"}, {"select_user_id":"4392", "user_name":"testing_name2", "user_email":"tpurposely1@yopmail.com"}]'
      due_date: consequatur
      resource_url:
        - 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
      pdf_file:
        - consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      questions: '- [{"text":"this is first question", "options" : [ "test1", "test2", "test3", "test4"],"correctAnswer":"1"},{"text":"this is second question", "options" : [ "test1", "test2", "test3", "test4"], "correctAnswer":"2" }]'
      attemptQuestions: 17
      number_of_correct_answer_to_pass: 17
      isLibrary: 0
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "msg": "Toolbox Talk created successfully",
           "data": {
               "title": "new fresh without send and save",
               "user_id": "4392",
               "number_of_questions_to_ask": "1",
               "number_of_correct_answer_to_pass": "1",
               "is_library": "1",
               "due_date": "2025-08-26",
               "description": "This talk covers essential safety measures when working at heights, including the use of protective equipment, proper setup of ladders and scaffolding, and awareness of potential fall hazards.",
               "updated_at": "2025-08-26T11:24:48.000000Z",
               "created_at": "2025-08-26T11:24:48.000000Z",
               "id": 59,
               "status": "0",
               "is_created": "1"
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
               "name": ["The title field is required."],
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/createdByMe-talks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all toolbox talks data which is created.'
      description: 'This endpoint returns all toolbox talks data. In this API, we get all toolbox talk data and also we can filter through assigned or unassigned status that toolbox tallk is in assigned status or unassigned status. We can do search, filter by dates from all toolbox talks.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'no':
        name: 'no'
        description: "need of any param initial. If we want to search or filter or sorted any toolbox talk then we need to put query params while we are searching then we need to put 'search' & for getting assigned or unassigned then we need to put 'status' param and 'start_date' & 'end_date' when we want to filter according to the dates from calender."
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      'no': consequatur
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "Toolbox Talks fetched successfully",
               "toolboxTalks": {
                    "data": [
                        {
                            "id": 8,
                            "title": "Test new again",
                            "video_url": null,
                            "number_of_questions_to_ask": null,
                            "number_of_correct_answer_to_pass": null,
                            "file": null,
                            "description": "",
                            "user_id": 4392,
                            "is_library": "3",
                            "is_library_deleted": "2",
                            "due_date": "2025-08-27",
                            "deleted_at": null,
                            "status": "1",
                            "is_created": "1",
                            "created_at": "2025-08-27T14:35:44.000000Z",
                            "updated_at": "2025-08-27T14:35:52.000000Z",
                            "get_assigned_users_count": 5,
                            "get_count_completed_count": 0
                        },
                        {
                            "id": 7,
                            "title": "Testing new ",
                            "video_url": null,
                            "number_of_questions_to_ask": null,
                            "number_of_correct_answer_to_pass": null,
                            "file": null,
                            "description": "",
                            "user_id": 4392,
                            "is_library": "3",
                            "is_library_deleted": "2",
                            "due_date": "2025-08-27",
                            "deleted_at": null,
                            "status": "1",
                            "is_created": "1",
                            "created_at": "2025-08-27T14:34:51.000000Z",
                            "updated_at": "2025-08-27T14:34:55.000000Z",
                            "get_assigned_users_count": 1,
                            "get_count_completed_count": 0
                        },
                    ],
                    "links": {"first": "https://companymanagementsystems-back-qa.chetu.com/api/v1/createdByMe-talks?page=1", "last": "https://companymanagementsystems-back-qa.chetu.com/api/v1/createdByMe-talks?page=1", "prev": null,"next": null},
                    "meta": { "current_page": 1, "from": 1, "last_page": 1,
                    "links": [{"url": null, "label": "&laquo; Previous", "active": false}, {"url": "https://companymanagementsystems-back-qa.chetu.com/api/v1/createdByMe-talks?page=1","label": "1","active": true}, { "url": null, "label": "Next &raquo;", "active": false }],
                    "path": "https://companymanagementsystems-back-qa.chetu.com/api/v1/createdByMe-talks", "per_page": 10, "to": 8, "total": 8 }
                }
            }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Data not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "error": "Failed to fetched toolbox talks: Something went wrong!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/toolbox-talk/{id?}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of a single toolbox talk by ID.'
      description: "This endpoint returns detailed information about a toolbox talk when their ID is provided as a query parameter. This API is providing the details of a single toolbox talk which have all data of questions sheet with options and correct answers and also fetching the data of documents like video URL links or PDF's data. Now if we are getting the data of assigned users then this toolbox is already assigned to some users or whatever we are getting data of this user in below response & apart from this we are getting details of that user also who has created this Toolbox talk."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the .'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters:
      id:
        name: id
        description: 'The ID of the toolbox talk.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      id: 17
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                "talkDetails": {
                   "id": 58,
                   "title": "new fresh test1",
                   "number_of_questions_to_ask": 1,
                   "number_of_correct_answer_to_pass": 1,
                   "description": "This talk covers essential safety measures when working at heights, including the use of protective equipment, proper setup of ladders and scaffolding, and awareness of potential fall hazards.",
                   "user_id": 4392,
                   "is_library": "2",
                    "due_date": "2025-08-26",
                    "deleted_at": null,
                    "status": "1",
                    "created_at": "2025-08-26T10:54:33.000000Z",
                    "updated_at": "2025-08-26T10:54:37.000000Z",
                    "questions": [{ "id": 167, "name": "this is first question", "options": [{"id": 665, "name": "test1"}, {"id": 666,"name": "test2"},{"id": 667,"name": "test3"},{"id": 668,"name": "test4"}], "correct_answer": [{"id": 665,"name": "test1"}]},{ "id": 167, "name": "this is second question", "options": [{"id": 770, "name": "A"}, {"id": 771,"name": "B"},{"id": 772,"name": "C"},{"id": 773,"name": "D"}], "correct_answer": [{"id": 772,"name": "C"}]}],
                   "video_url": [],
                    "file_data": [{"id": 49,"toolbox_talk_id": 58,"file_url": "https://companymanagementsystems-back-qa.chetu.com/storage/toolbox_talks/toolbox_talk_58311756205673.pdf", "file_name": "toolbox_talk_58311756205673.pdf","file_status": "1", "file_state": "Completed"}],
                    "assigned_users": [{"id": 113,"name": "testing_name1","status": "","attempt": null,"time": null,"date": null,"result": { "result": "0/0" }}],
                    "created_by_user": null
                },
               "status": 200
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Toolbox talk data not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/delete-url-pdf
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a video URL or attachment PDF by attachment_id.'
      description: 'This endpoint deletes a Video URL Link or Attachments specified by its IDs in the request body in an array and given toolbox_talk_id also for identiying.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      attachment_id:
        name: attachment_id
        description: 'array required The attachment_id of the attachment or video URL link table to delete.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      toolbox_talk_id:
        name: toolbox_talk_id
        description: 'The toolbox_talk_id of the toolbox talk.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      attachment_id: 17
      toolbox_talk_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "Attachment is deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Data not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "error": "Failed to delete attachments: Something went wrong!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/delete-selected-talks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a toolbox talk by toolboxTalk_ids into array.'
      description: 'This endpoint deletes a toolbox talk specified by its IDs in the request body in an array. In this API we can delete multiple toolbox talks together or we can delete only single at a time.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolboxTalk_ids:
        name: toolboxTalk_ids
        description: 'array required The toolboxTalk_ids of the toolbox talks to delete.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      toolboxTalk_ids: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "Selected Toolbox Talk have been deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Data not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "error": "Failed to delete toolbox talks: Something went wrong!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/assignToMe-talks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all assigned to me toolbox talks data which is assigned to authentication (auth) user.'
      description: 'This endpoint returns all assigned to me toolbox talks data. In this API, we get all assigned to me toolbox talks data and also we can filter through ongoing or completed or ended status that toolbox tallk is in ongoing status (means need to take or attempt the question sheet or acknowledged toolbox talk) or completed status(means attempt done or acknowledged successfully toolbox talk) or ended status(means toolbox talk has been expired). We can do search, filter by dates from all assigned to me toolbox talks.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'no':
        name: 'no'
        description: "need of any param at initial. If we want to search or filter or sorted any toolbox talk then we need to put query params while we are searching then we need to put 'search' & for getting ongoing or completed or ended then we need to put 'status' param and 'start_date' & 'end_date' when we want to filter according to the dates from calender."
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      'no': consequatur
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "status": 200,
               "message": "Successfully fetched Toolbox Talks that are assigned to you.",
                "assignToMeToolboxTalks": {
                    "data": [
                    {
                        "id": 44,
                        "role_id": null,
                        "permission_id": null,
                        "toolbox_talk_id": 8,
                        "user_email": "chandrakeshp@chetu.com",
                        "user_name": "Chandrakesh Pandey",
                        "due_date": "2025-08-27",
                        "user_id": 4392,
                        "status": "3",
                        "result": null,
                        "attempt_count": null,
                        "date_time": null,
                        "created_at": "2025-08-27T14:35:44.000000Z",
                        "updated_at": "2025-08-27T14:35:44.000000Z",
                        "deleted_at": null,
                        "get_toolbox_talk_count": 1,
                        "get_toolbox_talk": {
                            "id": 8,
                            "title": "Test new again",
                            "video_url": null,
                            "number_of_questions_to_ask": null,
                            "number_of_correct_answer_to_pass": null,
                            "file": null,
                            "description": "",
                            "user_id": 4392,
                            "is_library": "3",
                            "is_library_deleted": "2",
                            "due_date": "2025-08-27",
                            "deleted_at": null,
                            "status": "1",
                            "is_created": "1",
                            "created_at": "2025-08-27T14:35:44.000000Z",
                            "updated_at": "2025-08-27T14:35:52.000000Z",
                            "get_created_by_user": null,
                            "questions": [],
                            "get_assigned_users": [
                                {
                                    "id": 42,
                                    "role_id": null,
                                    "permission_id": null,
                                    "toolbox_talk_id": 8,
                                    "user_email": "akashs@chetu.com",
                                    "user_name": "Akash Sinha",
                                    "due_date": "2025-08-27",
                                    "user_id": 4379,
                                    "status": "3",
                                    "result": null,
                                    "attempt_count": null,
                                    "date_time": null,
                                    "created_at": "2025-08-27T14:35:44.000000Z",
                                    "updated_at": "2025-08-27T14:35:44.000000Z",
                                    "deleted_at": null,
                                    "assigned_users": null
                                },
                                {
                                    "id": 43,
                                    "role_id": null,
                                    "permission_id": null,
                                    "toolbox_talk_id": 8,
                                    "user_email": "armaanl@chetu.com",
                                    "user_name": "armaan lodi",
                                    "due_date": "2025-08-27",
                                    "user_id": 4723,
                                    "status": "3",
                                    "result": null,
                                    "attempt_count": null,
                                    "date_time": null,
                                    "created_at": "2025-08-27T14:35:44.000000Z",
                                    "updated_at": "2025-08-27T14:35:44.000000Z",
                                    "deleted_at": null,
                                    "assigned_users": null
                                }
                            ],
                            "resource_url_data": [
                                {
                                    "id": 7,
                                    "user_id": 4392,
                                    "toolbox_talk_id": 8,
                                    "video_url": "https://static.vecteezy.com/system/resources/previews/008/259/475/mp4/wooden-dummy-training-in-wing-chun-kung-fu-a-man-practicing-wing-chun-video.mp4",
                                    "video_description": null,
                                    "video_status": "1",
                                    "video_state": "Completed",
                                    "deleted_at": null,
                                    "created_at": null,
                                    "updated_at": "2025-08-27T14:38:05.000000Z"
                                }
                            ],
                            "attachments_pdf_data": []
                        }
                    },
                    ]
               }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Data not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "error": "Failed to fetched toolbox talks: Something went wrong!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/update-attachments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update the attachments PDF's OR Video Resource Url's of a toolbox talk."
      description: "This endpoint updates the attachments PDF's OR Video Resource Url's of a toolbox talk. In this API, while we are updating the attachments PDF's or Video Resource URL's of a toolbox talk, we need to send toolbox_talk_id, resource_url in array OR pdf_file in array."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: 'required. The toolbox_talk_id of the toolbox talk.'
        required: false
        example: consequatur
        type: interger
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      resource_url:
        name: resource_url
        description: "when 'pdf_file' is not present. The 'Video URL Link' for a toolbox talk. Ex:- \"['youtube.com','testtubevideo.com' ]\""
        required: true
        example:
          - 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pdf_file:
        name: pdf_file
        description: "when 'resource_url' is not present. The 'Upload PDF File' for a toolbox talk. Ex:- \"['firstPDF.pdf','secondPDF.pdf' ]\""
        required: true
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: consequatur
      resource_url:
        - 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
      pdf_file:
        - consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Attachments updated successfully",
           "Updated_Toolbox_Talk": {
                   "id": 1,
                   "title": "new fresh test1",
                   "number_of_questions_to_ask": 1,
                   "number_of_correct_answer_to_pass": 1,
                   "description": "This talk covers essential safety measures when working at heights, including the use of protective equipment, proper setup of ladders and scaffolding, and awareness of potential fall hazards.",
                   "user_id": 4392,
                   "is_library": "2",
                   "due_date": "2025-08-26",
                   "deleted_at": null,
                   "status": "1",
                   "created_at": "2025-08-26T10:54:33.000000Z",
                   "updated_at": "2025-08-26T10:54:37.000000Z",
                }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
               "toolbox_talk_id": ["The toolbox_talk_id field is required."],
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/update-questions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the questions sheet with options and correct answer of a toolbox talk.'
      description: 'This endpoint updates the question sheet with options and correct answer of a toolbox talk. In this API, while we are updating the question sheet with options and correct answer of a toolbox talk, we need to send toolbox_talk_id, questions in json array with some keys (objects), Number of Questions to Ask per Participant, Number of Correct Answers Required to Pass & New questions add if wants to add.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: 'required. The toolbox_talk_id of the toolbox talk.'
        required: false
        example: consequatur
        type: interger
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      questions:
        name: questions
        description: 'array with some keys (objects) optional. The Question Sheets for the toolbox talk.'
        required: false
        example: '- [{"text":"this is updated first question", "options" : [ "test11", "test22", "test33", "test44"],"correctAnswer":"4"},{"text":"this is updated second question", "options" : [ "test111", "test222", "test333", "test444"], "correctAnswer":"1" }]'
        type: json
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      attemptQuestions:
        name: attemptQuestions
        description: "when we choose 'questions' the Question Sheets for the toolbox talk. In this Number of Questions to Ask per Participant(attemptQuestions) is always greater then Number of Correct Answers Required to Pass(number_of_correct_answer_to_pass)."
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      number_of_correct_answer_to_pass:
        name: number_of_correct_answer_to_pass
        description: "when we choose 'questions' the Question Sheets for the toolbox talk. In this Number of Correct Answers Required to Pass(number_of_correct_answer_to_pass) is always less then Number of Questions to Ask per Participant(attemptQuestions)."
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      new_questions:
        name: new_questions
        description: 'array with some keys (objects) optional. The New Questions added for the toolbox talk.'
        required: false
        example: '- [{"text":"this is new extra first question", "options" : [ "test11", "test22", "test33", "test44"],"correctAnswer":"4"},{"text":"this is new extra second question", "options" : [ "test111", "test222", "test333", "test444"], "correctAnswer":"1" }]'
        type: json
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: consequatur
      questions: '- [{"text":"this is updated first question", "options" : [ "test11", "test22", "test33", "test44"],"correctAnswer":"4"},{"text":"this is updated second question", "options" : [ "test111", "test222", "test333", "test444"], "correctAnswer":"1" }]'
      attemptQuestions: 17
      number_of_correct_answer_to_pass: 17
      new_questions: '- [{"text":"this is new extra first question", "options" : [ "test11", "test22", "test33", "test44"],"correctAnswer":"4"},{"text":"this is new extra second question", "options" : [ "test111", "test222", "test333", "test444"], "correctAnswer":"1" }]'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Questions updated successfully.",
           "Toolbox_Talk": {
                   "id": 1,
                   "title": "new fresh test1",
                   "number_of_questions_to_ask": 1,
                   "number_of_correct_answer_to_pass": 1,
                   "description": "This talk covers essential safety measures when working at heights, including the use of protective equipment, proper setup of ladders and scaffolding, and awareness of potential fall hazards.",
                   "user_id": 4392,
                   "is_library": "2",
                   "due_date": "2025-08-26",
                   "deleted_at": null,
                   "is_created": "1",
                   "status": "1",
                   "created_at": "2025-08-26T10:54:33.000000Z",
                   "updated_at": "2025-08-26T10:54:37.000000Z",
                }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Question not found for ID."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
               "toolbox_talk_id": ["The toolbox_talk_id field is required."],
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/company-library-toolbox-talks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all company library toolbox talks data which is saved into toolbox talk library.'
      description: 'This endpoint returns all company library toolbox talks data. In this API, we get all company library toolbox talks data and also we can sorting through choosing Date created or Date updated from the dropdown list that toolbox tallk is created at what datetime or updated at what datetime. We can do search from the company library toolbox talks.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'no':
        name: 'no'
        description: "need of any param at initial. If we want to search or sorting any library toolbox talks then we need to put query params while we are searching then we need to put 'search_cms' & for sorting according to the dates we need to put the updated_date or created_date in param."
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      'no': consequatur
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "status": 200,
               "message": "Company Toolbox Talks Talks fetched successfully.",
                "toolboxTalks": {
                    "data": [
                        {
                            "id": 8,
                            "title": "Test new again",
                            "video_url": null,
                            "number_of_questions_to_ask": null,
                            "number_of_correct_answer_to_pass": null,
                            "file": null,
                            "description": "",
                            "user_id": 4392,
                            "is_library": "3",
                            "is_library_deleted": "2",
                            "due_date": "2025-08-27",
                            "deleted_at": null,
                            "status": "1",
                            "is_created": "1",
                            "created_at": "2025-08-27T14:35:44.000000Z",
                            "updated_at": "2025-08-27T14:35:52.000000Z",
                            "get_assigned_users_count": 5,
                            "get_count_completed_count": 0
                        },
                        {
                            "id": 7,
                            "title": "Testing new ",
                            "video_url": null,
                            "number_of_questions_to_ask": null,
                            "number_of_correct_answer_to_pass": null,
                            "file": null,
                            "description": "",
                            "user_id": 4392,
                            "is_library": "3",
                            "is_library_deleted": "2",
                            "due_date": "2025-08-27",
                            "deleted_at": null,
                            "status": "1",
                            "is_created": "1",
                            "created_at": "2025-08-27T14:34:51.000000Z",
                            "updated_at": "2025-08-27T14:34:55.000000Z",
                            "get_assigned_users_count": 1,
                            "get_count_completed_count": 0
                        },
                    ],
                    "links": {"first": "https://companymanagementsystems-back-qa.chetu.com/api/v1/createdByMe-talks?page=1", "last": "https://companymanagementsystems-back-qa.chetu.com/api/v1/createdByMe-talks?page=1", "prev": null,"next": null},
                    "meta": { "current_page": 1, "from": 1, "last_page": 1,
                    "links": [{"url": null, "label": "&laquo; Previous", "active": false}, {"url": "https://companymanagementsystems-back-qa.chetu.com/api/v1/createdByMe-talks?page=1","label": "1","active": true}, { "url": null, "label": "Next &raquo;", "active": false }],
                    "path": "https://companymanagementsystems-back-qa.chetu.com/api/v1/createdByMe-talks", "per_page": 10, "to": 8, "total": 8 }
                }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Data not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "error": "Failed to fetched toolbox talks: Something went wrong!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/attempt-questions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Attempt the questions sheet with correct answer of a toolbox talk.'
      description: 'This endpoint attempts the question sheet with correct answer of a toolbox talk. In this API, while we are attempting the question sheet with correct answer of a toolbox talk, we need to send toolbox_talk_id, questions in json array with some keys (objects) with the question ID you want to attempt and any answer ID which one you want to choose answer.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: 'required. The toolbox_talk_id of the toolbox talk.'
        required: false
        example: consequatur
        type: interger
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      questions:
        name: questions
        description: "array with some keys (objects) required. The Question Id's and Options ID's for the toolbox talk."
        required: false
        example: '- [{ "question_id": 2, "answer": 7 },{ "question_id": 1, "answer": 2 }]'
        type: json
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      auth_user_id:
        name: auth_user_id
        description: 'optional. This is authentication user ID who is attempting the Question Sheet.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: consequatur
      questions: '- [{ "question_id": 2, "answer": 7 },{ "question_id": 1, "answer": 2 }]'
      auth_user_id: 17
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Questions attempted successfully.",
            "data": [
                {
                   "id": 1,
                   "user_id": "4392",
                   "question_id": 1,
                   "toolbox_talk_id": "2",
                   "answer": 3,
                   "is_correct": 1,
                   "attempt_count": 1,
                   "result_data_count": {
                      "total_questions": 2,
                      "number_of_attempted": 2,
                      "number_of_passed": 1
                    }
                }
            ],
            "result": {
                 "correct_count": 1,
                 "status": "passed"
               }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Question not found for ID."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
               "toolbox_talk_id": ["The toolbox_talk_id field is required."],
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/update-new-assigned-toolbox
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Make a toolbox talk assigned to users.'
      description: "This endpoint do assign a toolbox to users. In this API, when we assign a toolbox talk then we need to choose one option from dropdown 'Send', 'Save in library' OR 'Send & Save'. If we choose 'Send' OR 'Send & Save' then we always need to select any role or departments or attendees or permissions and also 'Video URL Link' OR 'Upload PDF file' if attachment not uploaded at creating time of toolbox talk. And if we choose only Save in Library then it is showing as it is when this toolbox talk was created unassigned within 'create by me' tab and 'toolbox library within Company library'."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: 'required. The toolbox_talk_id of the toolbox talk.'
        required: false
        example: consequatur
        type: interger
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      select_user_detail:
        name: select_user_detail
        description: "array with some keys (objects). The users selected from dropdown list from attendees or roles or departments or permissions or select users. It is required while choose 'Send' OR 'Send & Save'. But when we choose 'Save in library' then this param is optional."
        required: false
        example: '- [{"select_user_id":"4392", "user_name":"testing_name1", "user_email":"tpurposely@gmail.com"}, {"select_user_id":"4392", "user_name":"testing_name2", "user_email":"tpurposely1@yopmail.com"}]'
        type: json
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      due_date:
        name: due_date
        description: 'optional The Due date of toolbox talk. Ex:- "2025-08-22"'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      isLibrary:
        name: isLibrary
        description: 'when we select options from dropdown list then we send the values in this params 1, 2 or 3.'
        required: true
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: consequatur
      select_user_detail: '- [{"select_user_id":"4392", "user_name":"testing_name1", "user_email":"tpurposely@gmail.com"}, {"select_user_id":"4392", "user_name":"testing_name2", "user_email":"tpurposely1@yopmail.com"}]'
      due_date: consequatur
      isLibrary: 0
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "msg": "Toolbox talk has been assigned successfully",
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
               "toolbox_talk_id": ["The toolbox_talk_id field is required."],
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/assignedtome
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of an assigned toolbox talk by toolbox_talk_id which is assigned to me (asigned to authentication user AUTH user).'
      description: "This endpoint returns detailed information about a assigned toolbox talk when their ID is provided as a query parameter. This API is providing the details of a single assigned toolbox talk which have all data of questions sheet with options and correct answers and also fetching the data of documents like video URL links or PDF's data. Now if we are getting the data of assigned users then this toolbox is already assigned to some users or whatever we are getting data of this user in below response & apart from this we are getting details of that user also who has created this Toolbox talk."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: 'The toolbox_talk_id of the toolbox talk.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                "status": 200,
                "msg": "Successfully fetched Toolbox Talks that are assigned to you.",
                "assignToMeToolboxTalks": {
                   "id": 58,
                   "title": "new fresh test1",
                   "number_of_questions_to_ask": 1,
                   "number_of_correct_answer_to_pass": 1,
                   "description": "This talk covers essential safety measures when working at heights, including the use of protective equipment, proper setup of ladders and scaffolding, and awareness of potential fall hazards.",
                   "user_id": 4392,
                   "is_library": "2",
                    "due_date": "2025-08-26",
                    "deleted_at": null,
                    "status": "1",
                    "created_at": "2025-08-26T10:54:33.000000Z",
                    "updated_at": "2025-08-26T10:54:37.000000Z",
                    "questions": [{ "id": 167, "name": "this is first question", "options": [{"id": 665, "name": "test1"}, {"id": 666,"name": "test2"},{"id": 667,"name": "test3"},{"id": 668,"name": "test4"}], "correct_answer": [{"id": 665,"name": "test1"}]},{ "id": 167, "name": "this is second question", "options": [{"id": 770, "name": "A"}, {"id": 771,"name": "B"},{"id": 772,"name": "C"},{"id": 773,"name": "D"}], "correct_answer": [{"id": 772,"name": "C"}]}],
                   "video_url": [],
                    "file_data": [{"id": 49,"toolbox_talk_id": 58,"file_url": "https://companymanagementsystems-back-qa.chetu.com/storage/toolbox_talks/toolbox_talk_58311756205673.pdf", "file_name": "toolbox_talk_58311756205673.pdf","file_status": "1", "file_state": "Completed"}],
                },

          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Assigned toolbox talk data not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/delete-question/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a single question from question sheet of a toolbox talk by ID.'
      description: 'This endpoint deletes a single question from question sheet of a toolbox talk by ID is provided as a query parameter. This API deletes a question from the questions sheet of a particular toolbox talk. We provide the question id into the param for deleting a questioon from the question sheet.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete question.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters:
      id:
        name: id
        description: 'The question ID of a questions sheet of a toolbox talk.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      id: 17
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "Question is deleted successfully!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Question ID data not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/delete-selected-cms-library
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a toolbox talk by toolbox_talk_id into array.'
      description: 'This endpoint deletes a toolbox talk specified by its IDs in the request body in an array. In this API we can delete multiple toolbox talks together or we can delete only single at a time.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: 'array required The toolbox_talk_id of the toolbox talks to delete.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "Toolbox talk library is deleted successfully!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Data not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "error": "Failed to delete toolbox talks library: Something went wrong!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/update-video-pdf-status
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the video status OR PDF status of a toolbox talk.'
      description: "This endpoint updates the video status OR PDF status of a toolbox talk. In this API, while we are updating the video status OR PDF status of a toolbox talk, we need to send 'video_id' OR 'file_id' and 'type' param to differentiate that we are updating PDF status or video status & also send the value of 'status' means video is watched or not & at other hand, PDF is read or not."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      video_id:
        name: video_id
        description: 'This field is required when <code>file_id</code> is not present. The <code>id</code> of an existing record in the resource_video_links table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      file_id:
        name: file_id
        description: 'This field is required when <code>video_id</code> is not present. The <code>id</code> of an existing record in the media_files table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: Video
        type: string
        enumValues:
          - Video
          - Pdf
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: '1'
        type: string
        enumValues:
          - '1'
          - '2'
        exampleWasSpecified: false
        nullable: false
        custom: []
      "'toolbox_talk_id'":
        name: "'toolbox_talk_id'"
        description: 'The toolbox_talk_id of the toolbox talk.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      "'video_id'":
        name: "'video_id'"
        description: "while 'file_id' is not available. The video id of the toolbox talk."
        required: true
        example: consequatur
        type: interger
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      "'file_id'":
        name: "'file_id'"
        description: "while 'video_id' is not available. The File id of the toolbox talk."
        required: true
        example: consequatur
        type: interger
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      "'type'":
        name: "'type'"
        description: "required. The 'type' to differentiate the PDF or Video of the toolbox talk."
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      "'status'":
        name: "'status'"
        description: 'required. Status of video has been watched or not, same for PDF is read or not of a toolbox talk.'
        required: false
        example: consequatur
        type: interger
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: 17
      type: Video
      status: '1'
      "'toolbox_talk_id'": 17
      "'video_id'": consequatur
      "'file_id'": consequatur
      "'type'": consequatur
      "'status'": consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "status": 200,
           "message": "Attachments updated successfully",
           "data": {
                   "id": 1,
            "user_id": 4392,
            "toolbox_talk_id": 1,
            "video_url": "https://static.vecteezy.com/system/resources/previews/008/259/475/mp4/wooden-dummy-training-in-wing-chun-kung-fu-a-man-practicing-wing-chun-video.mp4",
            "video_description": null,
            "video_status": "1",
            "video_state": "Completed",
            "deleted_at": null,
            "created_at": "2025-08-26T17:22:40.000000Z",
            "updated_at": "2025-08-27T18:05:08.000000Z"
                }
            "msg": "Video has been completed successfully!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
               "toolbox_talk_id": ["The toolbox_talk_id field is required."],
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/get-questions-options
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of questions with their options by toolbox_talk_id.'
      description: 'This endpoint returns details of questions with their options of a toolbox talk when their ID is provided as a body parameter. This API is providing the details of all questions with thier options for a particular toolbox talk which have all data of questions sheet with options.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: 'The toolbox_talk_id of the toolbox talk.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                "msg": "Toolbox Talks questions and options data has been fetched successfully.",
                "data": {
                   "id": 58,
                   "title": "new fresh test1",
                   "number_of_questions_to_ask": 1,
                   "number_of_correct_answer_to_pass": 1,
                   "description": "This talk covers essential safety measures when working at heights, including the use of protective equipment, proper setup of ladders and scaffolding, and awareness of potential fall hazards.",
                   "user_id": 4392,
                   "is_library": "2",
                    "questions": [{ "id": 167, "name": "this is first question", "options": [{"id": 665, "name": "test1"}, {"id": 666,"name": "test2"},{"id": 667,"name": "test3"},{"id": 668,"name": "test4"}],{ "id": 167, "name": "this is second question", "options": [{"id": 770, "name": "A"}, {"id": 771,"name": "B"},{"id": 772,"name": "C"},{"id": 773,"name": "D"}]}],
                },

          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Questions with options of a toolbox talk data not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/video-pdf-status
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get video OR PDF status detail after watched or read by toolbox_talk_id.'
      description: 'This endpoint returns details of video OR PDf status(updated status) of a toolbox talk when their ID is provided as a body parameter. This API is providing the details of status of Video OR PDF.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: 'The toolbox_talk_id of the toolbox talk.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           {
               "status": 200,
               "vorfstatus": 3
           }

          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/acknowledged-status
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the acknowledged status of a toolbox talk.'
      description: "This endpoint updates the acknowledged status of a toolbox talk. In this API, while we are updating the acknowledged status of a toolbox talk, we need to send 'status' value as 2. When any auth user watches any video through the video link or read the proper PDF then if question sheets are avilable of this toolbox talk, user need to attempt the exam or attempt the questions if he passed then he can acknowledged for this particular toolbox talk. If he failed then he need to attempt again & again, until he does not pass."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      "'toolbox_talk_id'":
        name: "'toolbox_talk_id'"
        description: 'The toolbox_talk_id of the toolbox talk.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: 17
      "'toolbox_talk_id'": 17
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "message": "AssignToolBox acknowledged successfully!",
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
               "toolbox_talk_id": ["The toolbox_talk_id field is required."],
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/make-toolbox-copy
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Make a copy of a toolbox talk.'
      description: 'This endpoint updates Make a copy of a toolbox talk. In this API, while we are making a copy of a toolbox talk. Using this API we can make a copy of a particular toolbox talk. We can generate multiple copies of a toolbox talk. After copy of the toolbox talk, whole data is copied as it is and we are able to assigned to some users.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      "'toolbox_talk_id'":
        name: "'toolbox_talk_id'"
        description: 'The toolbox_talk_id of the toolbox talk.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: 17
      "'toolbox_talk_id'": 17
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "msg": "Toolbox Talk copy is created successfully",
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
               "toolbox_talk_id": ["The toolbox_talk_id field is required."],
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/update-content-toolboxtalk
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the title or description of a toolbox talk.'
      description: 'This endpoint updates the title or description of a toolbox talk. In this API, while we are updating the title or description then title or desciption param will be send in API in bodyparam & also send the toolbox talk ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      toolbox_talk_id:
        name: toolbox_talk_id
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      title:
        name: title
        description: 'This field is required when <code>description</code> is not present.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'This field is required when <code>title</code> is not present.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      "'toolbox_talk_id'":
        name: "'toolbox_talk_id'"
        description: 'The toolbox_talk_id of the toolbox talk.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      "'title'":
        name: "'title'"
        description: "while 'description' is not available. The title of the toolbox talk."
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      "'description'":
        name: "'description'"
        description: "while 'title' is not availble. The description of the toolbox talk."
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      toolbox_talk_id: 17
      "'toolbox_talk_id'": 17
      "'title'": consequatur
      "'description'": consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "msg": "Toolbox Talk content has been updated successfully",
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
               "toolbox_talk_id": ["The toolbox_talk_id field is required."],
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/export_toolbox_csv/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the detailed data of signoff sheet with title data of a toolbox talk.'
      description: "This endpoint retrieves detailed data of signoff sheet with title data of a toolbox talk. In this API, while we are getting ata of signoff sheet with title data then we need to send only 'toolbox_talk_id' in queryParam."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the export toolbox csv.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters:
      "'toolbox_talk_id'":
        name: "'toolbox_talk_id'"
        description: 'The toolbox_talk_id of the toolbox talk.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      "'toolbox_talk_id'": 17
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
               "toolbox_talk_id": ["The toolbox_talk_id field is required."],
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
